(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{145:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return b}));var n=r(2),a=r(9),o=(r(0),r(160)),i={sidebar_label:"Release Workflow",title:"Release Workflow"},l={id:"guides/03-github-actions/03-release",title:"Release Workflow",description:"1. Once Pull Request is merged into develop - more features, fixes, chores, refactors etc. MAY be added - it reassembles flow of Git Flow(however, we let our releases to be handled by machines with use of semantic-release). This workflow is compatible with Github Flow - and MAY be used instead(by pushing changes directly to master branch - if so, go directly to point 3)",source:"@site/docs/guides/03-github-actions/03-release.md",permalink:"/template-test/docs/guides/03-github-actions/03-release",sidebar_label:"Release Workflow",sidebar:"guides",previous:{title:"Creating Pull Request",permalink:"/template-test/docs/guides/03-github-actions/02-creating-pull-request"},next:{title:"Label Synchronization",permalink:"/template-test/docs/guides/03-github-actions/04-labels-synchronization"}},c=[],s={rightToc:c};function b(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Once Pull Request is merged into ",Object(o.b)("em",{parentName:"li"},"develop")," - more features, fixes, chores, refactors etc. MAY be added - it reassembles flow of ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://danielkummer.github.io/git-flow-cheatsheet/"}),"Git Flow"),"(however, we let our releases to be handled by machines with use of ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/semantic-release/semantic-release"}),"semantic-release"),"). This workflow is compatible with ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://guides.github.com/introduction/flow/"}),"Github Flow")," - and MAY be used instead(by pushing changes directly to ",Object(o.b)("em",{parentName:"li"},"master")," branch - if so, go directly to point 3)"),Object(o.b)("li",{parentName:"ol"},"After all necessary changes are pushed to ",Object(o.b)("em",{parentName:"li"},"develop")," - you MAY decide to use current branch state for release by targeting ",Object(o.b)("em",{parentName:"li"},"master")," - or use ",Object(o.b)("em",{parentName:"li"},"next"),", ",Object(o.b)("em",{parentName:"li"},"alpha"),", ",Object(o.b)("em",{parentName:"li"},"beta")," for better release control."),Object(o.b)("li",{parentName:"ol"},"Merging releasable branch into ",Object(o.b)("em",{parentName:"li"},"master")," will run tests, lint the code(and provide output if necessary), build the documentation and code."),Object(o.b)("li",{parentName:"ol"},"Once merged this time ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/semantic-release/semantic-release"}),"semantic-release")," will run to create the Github Release, release notes, new entries to ",Object(o.b)("inlineCode",{parentName:"li"},"CHANGELOG"),", notify Slack, package and deploy to NPM and Github Package Repo, label the release, and notify any issues of it's deployment."),Object(o.b)("li",{parentName:"ol"},"After semantic-release-bot commits the release commit, this code will be pushed to the release branch under ",Object(o.b)("inlineCode",{parentName:"li"},"release/0.0.0"),".")))}b.isMDXComponent=!0},160:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=b(r),m=n,d=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return r?a.a.createElement(d,l(l({ref:t},s),{},{components:r})):a.a.createElement(d,l({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);