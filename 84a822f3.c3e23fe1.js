(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{149:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return p}));var a=t(2),r=t(9),o=(t(0),t(160)),c={sidebar_label:"Testing",title:"Testing"},i={id:"guides/02-best-practices/05-testing",title:"Testing",description:"Code always MUST be covered with appropriate tests. Current implementation uses Mocha and configuration under .mocharc.json",source:"@site/docs/guides/02-best-practices/05-testing.md",permalink:"/template-test/docs/guides/02-best-practices/05-testing",sidebar_label:"Testing",sidebar:"guides",previous:{title:"TypeScript",permalink:"/template-test/docs/guides/02-best-practices/04-typescript"},next:{title:"Documentation",permalink:"/template-test/docs/guides/02-best-practices/06-documentation"}},s=[{value:"Visual Studio Code debugging",id:"visual-studio-code-debugging",children:[{value:"Running edited file in <code>--watch</code> mode:",id:"running-edited-file-in---watch-mode",children:[]},{value:"Running all files in <code>--watch</code> mode:",id:"running-all-files-in---watch-mode",children:[]}]},{value:"Code coverage",id:"code-coverage",children:[]}],l={rightToc:s};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Code always MUST be covered with appropriate tests. Current implementation uses ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://mochajs.org/"}),"Mocha")," and configuration under ",Object(o.b)("inlineCode",{parentName:"p"},".mocharc.json")),Object(o.b)("p",null,"To run all available tests defined under ",Object(o.b)("inlineCode",{parentName:"p"},"./test/")," use:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm run test\n")),Object(o.b)("p",null,"Running tests can be separated by thier type: ",Object(o.b)("em",{parentName:"p"},"unit"),", ",Object(o.b)("em",{parentName:"p"},"integration"),", ",Object(o.b)("em",{parentName:"p"},"e2e")," by running:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm run test:unit\nnpm run test:integration\n")),Object(o.b)("p",null,"On top of that tests can run in watch mode(",Object(o.b)("inlineCode",{parentName:"p"},"--watch"),"):"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm run test:watch\nnpm run test:unit:watch\nnpm run test:integration:watch\n")),Object(o.b)("p",null,"Keep in mind that having additional ",Object(o.b)("inlineCode",{parentName:"p"},"tsconfig.json")," file under ",Object(o.b)("inlineCode",{parentName:"p"},"./test/tsconfig.json")," is necessary:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "extends": "../tsconfig.json",\n  "compilerOptions": {\n    "module": "commonjs",\n    "emitDecoratorMetadata": true,\n    "experimentalDecorators": true\n  }\n}\n')),Object(o.b)("h2",{id:"visual-studio-code-debugging"},"Visual Studio Code debugging"),Object(o.b)("p",null,"Additional changes to ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://code.visualstudio.com/docs/editor/debugging"}),Object(o.b)("inlineCode",{parentName:"a"},"launch.json")," Visual Studio Code launch configurations")," MUST be done to accommodate for ",Object(o.b)("inlineCode",{parentName:"p"},"ttypescript")," compiler:"),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://code.visualstudio.com/assets/docs/editor/debugging/launch-configuration.png",alt:"Open launch.json"})),":"),Object(o.b)("h3",{id:"running-edited-file-in---watch-mode"},"Running edited file in ",Object(o.b)("inlineCode",{parentName:"h3"},"--watch")," mode:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "configurations": [\n    {\n      "type": "node",\n      "request": "launch",\n      "name": "mocha:current",\n      "program": "${workspaceRoot}/node_modules/.bin/mocha",\n      "args": [\n        "--config",\n        "./.mocharc.json",\n        "--s",\n        "0",\n        "--timeout",\n        "999999",\n        "--watch",\n        "--watch-extensions",\n        "ts",\n        "${file}"\n      ],\n      "console": "integratedTerminal",\n      "internalConsoleOptions": "neverOpen",\n      "runtimeArgs": ["--nolazy"],\n      "sourceMaps": true,\n      "smartStep": true,\n      "env": {\n        "NODE_ENV": "test",\n        "TS_NODE_PROJECT": "./test/tsconfig.json",\n        "TS_NODE_COMPILER": "ttypescript"\n      }\n    }\n  ]\n}\n')),Object(o.b)("h3",{id:"running-all-files-in---watch-mode"},"Running all files in ",Object(o.b)("inlineCode",{parentName:"h3"},"--watch")," mode:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "configurations": [\n    {\n      "type": "node",\n      "request": "launch",\n      "name": "mocha:all",\n      "program": "${workspaceRoot}/node_modules/.bin/mocha",\n      "args": [\n        "--require",\n        "ts-node/register",\n        "--config",\n        "./.mocharc.json",\n        "--timeout",\n        "999999",\n        "--watch",\n        "--watch-extensions",\n        "ts"\n      ],\n      "console": "integratedTerminal",\n      "internalConsoleOptions": "neverOpen",\n      "runtimeArgs": ["--nolazy"],\n      "sourceMaps": true,\n      "smartStep": true,\n      "env": {\n        "NODE_ENV": "test",\n        "TS_NODE_PROJECT": "./test/tsconfig.json",\n        "TS_NODE_COMPILER": "ttypescript"\n      }\n    }\n  ]\n}\n')),Object(o.b)("h2",{id:"code-coverage"},"Code coverage"),Object(o.b)("p",null,"Testing for code coverage is possible with use of ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/istanbuljs/nyc"}),"istanbuljs/nyc")," that will enforce ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/istanbuljs/nyc#coverage-thresholds"}),"coverage thresholds")," - i.e. if thresholds are not met, execution will fail with error:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"error Command failed with exit code 1\n")),Object(o.b)("p",null,"Settings are stored under ",Object(o.b)("inlineCode",{parentName:"p"},".nycrc.json")," file and can be adjusted depending on projects specification."),Object(o.b)("p",null,"To run test of coverage use:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm run test:coverage\n")),Object(o.b)("p",null,"To generate basic report that can be consumed by browser use:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm run coverage\n")),Object(o.b)("p",null,"And additional reports for ",Object(o.b)("em",{parentName:"p"},"ci")," or ",Object(o.b)("em",{parentName:"p"},"browser")," can be generated by use of:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm run coverage:ci\nnpm run coverage:report\n")))}p.isMDXComponent=!0},160:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,m=u["".concat(c,".").concat(d)]||u[d]||b[d]||o;return t?r.a.createElement(m,i(i({ref:n},l),{},{components:t})):r.a.createElement(m,i({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=t[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);